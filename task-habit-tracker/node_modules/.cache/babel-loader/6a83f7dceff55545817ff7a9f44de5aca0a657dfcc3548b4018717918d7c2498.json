{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdeni\\\\Projects\\\\PiedTodo\\\\task-habit-tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getToday = () => new Date().toISOString().slice(0, 10);\nconst App = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [habitName, setHabitName] = useState('');\n\n  // Загрузка привычек\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('habits')) || [];\n    setHabits(saved);\n  }, []);\n\n  // Сохранение привычек\n  useEffect(() => {\n    localStorage.setItem('habits', JSON.stringify(habits));\n  }, [habits]);\n  const addHabit = () => {\n    if (!habitName.trim()) return;\n    const newHabit = {\n      id: Date.now(),\n      name: habitName,\n      frequency: 'daily',\n      // пока только ежедневные\n      history: []\n    };\n    setHabits([...habits, newHabit]);\n    setHabitName('');\n  };\n  const toggleHabit = id => {\n    const today = getToday();\n    setHabits(habits.map(habit => {\n      if (habit.id !== id) return habit;\n      const alreadyDone = habit.history.includes(today);\n      const newHistory = alreadyDone ? habit.history.filter(date => date !== today) : [...habit.history, today];\n      return {\n        ...habit,\n        history: newHistory\n      };\n    }));\n  };\n  const getStreak = history => {\n    const today = new Date();\n    let streak = 0;\n    for (let i = 0; i < 365; i++) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().slice(0, 10);\n      if (history.includes(dateStr)) {\n        streak++;\n      } else {\n        break;\n      }\n    }\n    return streak;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mt-6 mb-4\",\n      children: \"\\u041F\\u0440\\u0438\\u0432\\u044B\\u0447\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border p-2 rounded\",\n        placeholder: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0440\\u0438\\u0432\\u044B\\u0447\\u043A\\u0430\",\n        value: habitName,\n        onChange: e => setHabitName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addHabit,\n        className: \"ml-2 px-4 py-2 bg-green-500 text-white rounded\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: habits.map(habit => {\n        const doneToday = habit.history.includes(getToday());\n        const streak = getStreak(habit.history);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex justify-between items-center p-2 border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `cursor-pointer ${doneToday ? 'text-green-600 font-bold' : ''}`,\n              onClick: () => toggleHabit(habit.id),\n              children: habit.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"\\u0421\\u0442\\u0440\\u0438\\u043A: \", streak, \" \\u0434\\u043D\\u0435\\u0439\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setHabits(habits.filter(h => h.id !== habit.id)),\n            className: \"text-red-500 ml-4\",\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, habit.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"DVLuxn/FAF/Mga2o+oeq22QbEjU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getToday","Date","toISOString","slice","App","_s","habits","setHabits","habitName","setHabitName","saved","JSON","parse","localStorage","getItem","setItem","stringify","addHabit","trim","newHabit","id","now","name","frequency","history","toggleHabit","today","map","habit","alreadyDone","includes","newHistory","filter","date","getStreak","streak","i","setDate","getDate","dateStr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","doneToday","h","_c","$RefreshReg$"],"sources":["C:/Users/mdeni/Projects/PiedTodo/task-habit-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst getToday = () => new Date().toISOString().slice(0, 10);\r\n\r\nconst App = () => {\r\n    const [habits, setHabits] = useState([]);\r\n    const [habitName, setHabitName] = useState('');\r\n\r\n    // Загрузка привычек\r\n    useEffect(() => {\r\n        const saved = JSON.parse(localStorage.getItem('habits')) || [];\r\n        setHabits(saved);\r\n    }, []);\r\n\r\n    // Сохранение привычек\r\n    useEffect(() => {\r\n        localStorage.setItem('habits', JSON.stringify(habits));\r\n    }, [habits]);\r\n\r\n    const addHabit = () => {\r\n        if (!habitName.trim()) return;\r\n        const newHabit = {\r\n            id: Date.now(),\r\n            name: habitName,\r\n            frequency: 'daily', // пока только ежедневные\r\n            history: []\r\n        };\r\n        setHabits([...habits, newHabit]);\r\n        setHabitName('');\r\n    };\r\n\r\n    const toggleHabit = (id) => {\r\n        const today = getToday();\r\n        setHabits(habits.map(habit => {\r\n            if (habit.id !== id) return habit;\r\n            const alreadyDone = habit.history.includes(today);\r\n            const newHistory = alreadyDone\r\n                ? habit.history.filter(date => date !== today)\r\n                : [...habit.history, today];\r\n            return { ...habit, history: newHistory };\r\n        }));\r\n    };\r\n\r\n    const getStreak = (history) => {\r\n        const today = new Date();\r\n        let streak = 0;\r\n        for (let i = 0; i < 365; i++) {\r\n            const date = new Date(today);\r\n            date.setDate(date.getDate() - i);\r\n            const dateStr = date.toISOString().slice(0, 10);\r\n            if (history.includes(dateStr)) {\r\n                streak++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return streak;\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4 max-w-md mx-auto\">\r\n            <h2 className=\"text-xl font-bold mt-6 mb-4\">Привычки</h2>\r\n\r\n            <div className=\"flex mb-4\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"flex-1 border p-2 rounded\"\r\n                    placeholder=\"Новая привычка\"\r\n                    value={habitName}\r\n                    onChange={(e) => setHabitName(e.target.value)}\r\n                />\r\n                <button\r\n                    onClick={addHabit}\r\n                    className=\"ml-2 px-4 py-2 bg-green-500 text-white rounded\"\r\n                >\r\n                    Добавить\r\n                </button>\r\n            </div>\r\n\r\n            <ul>\r\n                {habits.map(habit => {\r\n                    const doneToday = habit.history.includes(getToday());\r\n                    const streak = getStreak(habit.history);\r\n                    return (\r\n                        <li\r\n                            key={habit.id}\r\n                            className=\"flex justify-between items-center p-2 border-b\"\r\n                        >\r\n                            <div>\r\n                                <span\r\n                                    className={`cursor-pointer ${doneToday ? 'text-green-600 font-bold' : ''}`}\r\n                                    onClick={() => toggleHabit(habit.id)}\r\n                                >\r\n                                    {habit.name}\r\n                                </span>\r\n                                <div className=\"text-sm text-gray-500\">Стрик: {streak} дней</div>\r\n                            </div>\r\n                            <button\r\n                                onClick={() => setHabits(habits.filter(h => h.id !== habit.id))}\r\n                                className=\"text-red-500 ml-4\"\r\n                            >\r\n                                Удалить\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}